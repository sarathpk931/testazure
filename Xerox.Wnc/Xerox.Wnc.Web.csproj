<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <SpaProxyServerUrl>http://localhost:4200</SpaProxyServerUrl>
    <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
    <ImplicitUsings>enable</ImplicitUsings>
	<EnvironmentName>Development</EnvironmentName>
	<Environment>development</Environment>
	<EnableDefaultContentItems>false</EnableDefaultContentItems>
  </PropertyGroup>

	<PropertyGroup Condition="'$(EnvironmentName)' == 'Production'">
		<Environment>production</Environment>
	</PropertyGroup>


	<PropertyGroup Condition="'$(EnvironmentName)' == 'Development'">
		<Environment>development</Environment>
	</PropertyGroup>


	<PropertyGroup Condition="'$(EnvironmentName)' == 'Stage'">
		<Environment>stage</Environment>
	</PropertyGroup>

	<PropertyGroup Condition="'$(EnvironmentName)' == 'Test'">
		<Environment>test</Environment>
	</PropertyGroup>
	
  <ItemGroup>
    <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.21.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="7.0.11" />
    <PackageReference Include="Microsoft.Extensions.Logging.AzureAppServices" Version="7.0.11" />
    <PackageReference Include="ResXResourceReader.NetStandard" Version="1.1.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\.angular\" />
    <Folder Include="Views\Home\" />
    <Folder Include="wwwroot\" />
  </ItemGroup>


  <ItemGroup>
    <ProjectReference Include="..\Xerox.Wnc.Resources\Xerox.Wnc.Resources.csproj" />
  </ItemGroup>

	<ItemGroup>
		<!-- Remove the original appsettings.json and include the specific environment appsettings file -->
		<Content Remove="appsettings.*.json" />
		<Content Include="web.config" CopyToOutputDirectory="PreserveNewest" />
		<Content Include="appsettings.$(Environment).json" CopyToOutputDirectory="PreserveNewest" />
		
	</ItemGroup>

	<Target Name="RenameAppsettings" AfterTargets="Publish">
		<!-- Rename the specific environment appsettings file to appsettings.json -->
		<Move SourceFiles="$(PublishDir)\appsettings.$(Environment).json" DestinationFiles="$(PublishDir)\appsettings.json" />
	</Target>

	
	
    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">

	  <Message Text="Executing PublishRunWebpack for Configuration: $(Configuration), Environment :$(Environment)" Importance="high" />
	  <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
	  <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	  <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --configuration $(Environment)" />
	

	  <Message Text="Executed Npm Command for Configuration: $(Configuration) :$(EnvironmentName)" Importance="high" />
    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
